from rsf.proj import *


def grey(title):
    return 'grey title="%s" label2="Trace no." label1="Time" ' % title
     
# synthesize a blended shot
Fetch('pyang.rsf','pwd')
Flow('shot1','pyang','dd form=native | pad n2=512')
Flow('shot2','shot1','matflip mode=lr')
Flow('data','shot1 shot2','add scale=1,1 ${SOURCES[1]}')
Result('blended','data',grey('Blended'))


Flow('pq','data',
	'''
	twodip2 order=2 verb=y gauss=n niter=10 eps=5 lam=15
	''')

Plot('dip1','pq','window n3=1 |%s pclip=100 scalebar=y color=j' % grey('(a) First Dip'))
Plot('dip2','pq','window f3=1 |%s pclip=100 scalebar=y color=j' % grey('(b) Second Dip'))


# Seislet-based MCA deblending 1:
Flow('rec','data pq',
     	'''
     	mcaseislet dips=${SOURCES[1]} verb=y order=2 type=b eps=0.01 niter=10 pclip=3 pscale=50 
     	''')

Flow('rec1','rec','window n3=1 | window n3=1|mutter half=y v0=340 t0=-0.45 hyper=y x0=0')
Flow('rec2','rec','window f3=1 | window f3=1|mutter half=y v0=340 t0=-0.45 hyper=y x0=512')
Plot('rec1','window n2=512 |%s pclip=100 ' % grey('(c) Rec1'))
Plot('rec2','window n2=512 |%s pclip=100 ' % grey('(d) Rec2'))
Result('deblended1','dip1 dip2 rec1 rec2','TwoColumns')

End()

