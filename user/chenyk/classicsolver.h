/* This file is automatically generated. DO NOT EDIT! */

#ifndef _classicsolver_h
#define _classicsolver_h


#include <rsf.h>


void jacobi_solve(	
		  float **a /*matrix operator*/, 
		  float *x /*initial vector and final output solution*/,
		  float *b /*right hand side*/,
		  int n /*matrix size*/,
		  int iter /*iteration value*/);
/*< solver using jacobi algorithm >*/


void gs_solve(	float **a /*matrix operator*/, 
	      	float *x /*initial vector and final output solution*/,
		float *b /*right hand side*/,
		int n /*matrix size*/,
		int iter /*iteration value*/);
/*< solver using gauss-seidel algorithm >*/


void sor_solve(	float **a /*matrix operator*/, 
	      	float *x /*initial vector and final output solution*/,
		float *b /*right hand side*/,
		int n /*matrix size*/,
		int iter /*iteration value*/,
		float w /*relaxation coefficient*/);
/*< solver using succesive over relaxation algorithm>*/

#endif
