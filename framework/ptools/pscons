#!/usr/bin/env python
import sys, os, signal
import rsf.node

child = None

def handler(signum, frame):
    'signal handler for abortion [Ctrl-C]'
    global child
    sys.stderr.write('\n[Ctrl-C] Aborting...\n')
    if child:
        os.kill (signal.SIGINT,child)
    sys.exit(-1)

signal.signal(signal.SIGINT,handler) # handle interrupt

cpu = rsf.node.cpus()

threads = int(os.environ.get('RSF_THREADS',cpu))
cluster = os.environ.get('RSF_CLUSTER','localhost %d' % cpu)

args = ' '.join(sys.argv[1:])
command = 'scons -j %d CLUSTER="%s" %s' % (threads,cluster,args)

sys.stderr.write(command+'\n')

# interruptable system command
child = os.fork()
if child:
    try:
        (pid,exit) = os.waitpid(child,0)
        sys.exit(exit)
    except OSError:
        sys.exit(0)
else:
    os.system(command)
    os._exit(0)

